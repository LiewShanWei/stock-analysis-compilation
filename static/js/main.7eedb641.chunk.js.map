{"version":3,"sources":["components/Urls/OpenChartMill.js","components/Urls/OpenCnbc.js","components/Urls/OpenFinviz.js","components/Urls/OpenSeekingAlpha.js","components/Urls/OpenStockwits.js","components/Urls/OpenStreetInsider.js","components/Urls/OpenYahooFinance.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["OpenChartMill","ticker","window","open","ChartMillUrl","OpenCnbc","CnbcUrl","OpenFinviz","FinvizUrl","OpenSeekingAlpha","SeekingAlphaUrl","OpenStockwits","StockwitsUrl","OpenStreetInsider","StreetInsiderUrl","OpenYahooFinance","YahooFinanceUrl","Search","useState","enteredTicker","setEnteredTicker","Fragment","placeholder","onChange","event","target","value","type","onClick","console","log","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAUeA,EAJO,SAACC,GACnB,OAAOC,OAAOC,KALG,SAACF,GAClB,MAHQ,yCAGKA,EAIMG,CAAaH,GAAS,SAAS,wBCGvCI,EAJE,SAACJ,GACd,OAAOC,OAAOC,KALF,SAACF,GACb,MAHQ,+BAGKA,EAIMK,CAAQL,GAAS,SAAS,wBCGlCM,EAJI,SAACN,GAChB,OAAOC,OAAOC,KALA,SAACF,GACf,MAHQ,mCAGKA,EAIMO,CAAUP,GAAS,SAAS,wBCGpCQ,EAJU,SAACR,GACtB,OAAOC,OAAOC,KALM,SAACF,GACrB,MAHQ,mCAGKA,EAIMS,CAAgBT,GAAS,SAAS,wBCG1CU,EAJO,SAACV,GACnB,OAAOC,OAAOC,KALG,SAACF,GAClB,MAHQ,iCAGKA,EAIMW,CAAaX,GAAS,SAAS,wBCGvCY,EAJW,SAACZ,GACvB,OAAOC,OAAOC,KALO,SAACF,GACtB,MAHQ,qEAGKA,EAIMa,CAAiBb,GAAS,SAAS,wBCG3Cc,EAJU,SAACd,GACtB,OAAOC,OAAOC,KALM,SAACF,GACrB,MAHQ,mCAGKA,EAIMe,CAAgBf,GAAS,SAAS,wB,OC8B1CgB,EA3BA,WACX,MAAyCC,qBAAzC,mBAAOC,EAAP,KAAqBC,EAArB,KAkBA,OACI,eAAC,IAAMC,SAAP,WACI,uBAAOC,YAAY,uBAAuBC,SAlBrB,SAACC,GAC1BJ,EAAiBI,EAAMC,OAAOC,QAiBgDC,KAAK,SAC/E,wBAAQC,QAfY,WACxBC,QAAQC,IAAI,mBAAqBX,GAEjCZ,EAAWY,GACXR,EAAcQ,GACdnB,EAAcmB,GACdV,EAAiBU,GACjBd,EAASc,GACTN,EAAkBM,GAClBJ,EAAiBI,IAMb,kCChBGY,MAbf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,iFAIF,cAAC,EAAD,QCCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7eedb641.chunk.js","sourcesContent":["const url = \"https://www.chartmill.com/stock/quote/\"\r\n\r\nconst ChartMillUrl = (ticker) => {\r\n    return url + ticker\r\n};\r\n\r\nconst OpenChartMill = (ticker) => {\r\n    return window.open(ChartMillUrl(ticker), \"_blank\",\"noopener,noreferrer\")\r\n};\r\n\r\nexport default OpenChartMill;","const url = \"https://www.cnbc.com/quotes/\"\r\n\r\nconst CnbcUrl = (ticker) => {\r\n    return url + ticker\r\n};\r\n\r\nconst OpenCnbc = (ticker) => {\r\n    return window.open(CnbcUrl(ticker), \"_blank\",\"noopener,noreferrer\")\r\n};\r\n\r\nexport default OpenCnbc;","const url = \"https://finviz.com/quote.ashx?t=\"\r\n\r\nconst FinvizUrl = (ticker) => {\r\n    return url + ticker\r\n};\r\n\r\nconst OpenFinviz = (ticker) => {\r\n    return window.open(FinvizUrl(ticker), \"_blank\",\"noopener,noreferrer\")\r\n};\r\n\r\nexport default OpenFinviz;","const url = \"https://seekingalpha.com/symbol/\"\r\n\r\nconst SeekingAlphaUrl = (ticker) => {\r\n    return url + ticker\r\n};\r\n\r\nconst OpenSeekingAlpha = (ticker) => {\r\n    return window.open(SeekingAlphaUrl(ticker), \"_blank\",\"noopener,noreferrer\")\r\n};\r\n\r\nexport default OpenSeekingAlpha;","const url = \"https://stocktwits.com/symbol/\"\r\n\r\nconst StockwitsUrl = (ticker) => {\r\n    return url + ticker\r\n};\r\n\r\nconst OpenStockwits = (ticker) => {\r\n    return window.open(StockwitsUrl(ticker), \"_blank\",\"noopener,noreferrer\")\r\n};\r\n\r\nexport default OpenStockwits;","const url = \"https://www.streetinsider.com/stock_lookup.php?LookUp=Get+Quote&q=\"\r\n\r\nconst StreetInsiderUrl = (ticker) => {\r\n    return url + ticker\r\n};\r\n\r\nconst OpenStreetInsider = (ticker) => {\r\n    return window.open(StreetInsiderUrl(ticker), \"_blank\",\"noopener,noreferrer\")\r\n};\r\n\r\nexport default OpenStreetInsider;","const url = \"https://finance.yahoo.com/quote/\"\r\n\r\nconst YahooFinanceUrl = (ticker) => {\r\n    return url + ticker\r\n};\r\n\r\nconst OpenYahooFinance = (ticker) => {\r\n    return window.open(YahooFinanceUrl(ticker), \"_blank\",\"noopener,noreferrer\")\r\n};\r\n\r\nexport default OpenYahooFinance;","import React, { useState } from \"react\";\r\nimport OpenChartMill from \"./Urls/OpenChartMill\";\r\nimport OpenCnbc from \"./Urls/OpenCnbc\";\r\nimport OpenFinviz from \"./Urls/OpenFinviz\";\r\nimport OpenSeekingAlpha from \"./Urls/OpenSeekingAlpha\";\r\nimport OpenStockwits from \"./Urls/OpenStockwits\";\r\nimport OpenStreetInsider from \"./Urls/OpenStreetInsider\";\r\nimport OpenYahooFinance from \"./Urls/OpenYahooFinance\";\r\n\r\n\r\nconst Search = () => {\r\n    const [enteredTicker,setEnteredTicker] = useState();\r\n\r\n    const OnEnterTickerHandler = (event) => {\r\n        setEnteredTicker(event.target.value);\r\n    };\r\n\r\n    const SearchTickerHandler = () => {\r\n        console.log(\"Ticker Entered: \" + enteredTicker);\r\n\r\n        OpenFinviz(enteredTicker);\r\n        OpenStockwits(enteredTicker);\r\n        OpenChartMill(enteredTicker);\r\n        OpenSeekingAlpha(enteredTicker);\r\n        OpenCnbc(enteredTicker);\r\n        OpenStreetInsider(enteredTicker);\r\n        OpenYahooFinance(enteredTicker);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <input placeholder=\"Enter a Stock Ticker\" onChange={OnEnterTickerHandler} type=\"text\"/>\r\n            <button onClick={SearchTickerHandler}>Open Stock Pages</button>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Search;","import './App.css';\r\nimport Search from './components/Search';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <p>\r\n          Stock Analysis Compilation built using ReactJS\r\n        </p>\r\n      </header>\r\n      <Search />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}